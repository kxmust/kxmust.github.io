{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "Ken\u7684\u8d44\u6599\u5e93", "subTitle": "\u4e50\u89c2\u662f\u4e00\u79cd\u751f\u6d3b\u6001\u5ea6\uff0c\u4fdd\u6301\u5b66\u4e60\u548c\u8bb0\u5f55\u3002", "avatarUrl": "https://avatars.githubusercontent.com/u/99197662?v=4", "GMEEK_VERSION": "last", "postListJson": {"P2": {"htmlDir": "docs/post/shen-du-xue-xi-1--xian-xing-hui-gui.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e601-\u7ebf\u6027\u56de\u5f52", "postUrl": "post/shen-du-xue-xi-1--xian-xing-hui-gui.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/2", "commentNum": 0, "wordCount": 5018, "description": "# \u7ebf\u6027\u56de\u5f52\n\u5229\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u7684\u4f8b\u5b50\u6765\u4e86\u89e3\u795e\u7ecf\u7f51\u7edc\u7684\u5b9e\u73b0\u903b\u8f91\u3002", "top": 0, "createdAt": 1744967723, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-18", "dateLabelColor": "#0969da"}, "P3": {"htmlDir": "docs/post/shen-du-xue-xi-2-Softmax-hui-gui-(-chang-jian-de-sun-shi-han-shu-\uff0cFashion-MNIST).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e602-Softmax\u56de\u5f52(\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff0cFashion-MNIST)", "postUrl": "post/shen-du-xue-xi-2-Softmax-hui-gui-%28-chang-jian-de-sun-shi-han-shu-%EF%BC%8CFashion-MNIST%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/3", "commentNum": 0, "wordCount": 1990, "description": "# Softmax\u56de\u5f52\n\nsoftmax\u56de\u5f52\u5176\u5b9e\u662f\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\u3002", "top": 0, "createdAt": 1745238206, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-21", "dateLabelColor": "#0969da"}, "P4": {"htmlDir": "docs/post/shen-du-xue-xi-3--duo-ceng-gan-zhi-ji.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e603-\u591a\u5c42\u611f\u77e5\u673a", "postUrl": "post/shen-du-xue-xi-3--duo-ceng-gan-zhi-ji.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/4", "commentNum": 0, "wordCount": 883, "description": "# \u591a\u5c42\u611f\u77e5\u673a\n## 1 \u611f\u77e5\u673a\n1. \u611f\u77e5\u673a\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u6a21\u578b\uff0c\u8f93\u51fa0\u6216\u80051(\u6216\u8005-1,1)\uff0c\u662f\u6700\u65e9\u7684AI\u6a21\u578b\u4e4b\u4e00\u3002", "top": 0, "createdAt": 1745309083, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-22", "dateLabelColor": "#0969da"}, "P5": {"htmlDir": "docs/post/shen-du-xue-xi-4--shu-zhi-wen-ding-xing-you-hua-(-quan-zhong-chu-shi-hua-he-ji-huo-han-shu-de-xuan-ze-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e604-\u6570\u503c\u7a33\u5b9a\u6027\u4f18\u5316(\u6743\u91cd\u521d\u59cb\u5316\u548c\u6fc0\u6d3b\u51fd\u6570\u7684\u9009\u62e9)", "postUrl": "post/shen-du-xue-xi-4--shu-zhi-wen-ding-xing-you-hua-%28-quan-zhong-chu-shi-hua-he-ji-huo-han-shu-de-xuan-ze-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/5", "commentNum": 0, "wordCount": 1017, "description": "# \u6570\u503c\u7a33\u5b9a\u6027\n\u5728\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8ba1\u7b97\u68af\u5ea6\u662f\u53ef\u4ee5\u7406\u89e3\u4e3a\u591a\u4e2a\u77e9\u9635\u7684\u4e58\u6cd5\uff0c\u5f53\u7f51\u7edc\u6a21\u578b\u5f88\u6df1\u65f6\uff0c\u5982\u679c\u6bcf\u4e2a\u77e9\u9635\u4e2d\u7684\u503c\u90fd\u5927\u4e8e0\uff0c\u8fd9\u6837\u5c31\u4f1a\u8ba9\u68af\u5ea6\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u5bfc\u81f4\u68af\u5ea6\u7206\u70b8\uff0c\u8fd9\u5bf9\u6a21\u578b\u7684\u8bad\u7ec3\u6765\u8bf4\u662f\u81f4\u547d\u7684\u3002", "top": 0, "createdAt": 1745400389, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-23", "dateLabelColor": "#0969da"}, "P6": {"htmlDir": "docs/post/shen-du-xue-xi-5-Pytorch(-mo-xing-da-jian-, -quan-zhong-chu-shi-hua-, -quan-zhong-bao-cun-he-jia-zai-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e605-Pytorch(\u6a21\u578b\u642d\u5efa, \u6743\u91cd\u521d\u59cb\u5316, \u6743\u91cd\u4fdd\u5b58\u548c\u52a0\u8f7d)", "postUrl": "post/shen-du-xue-xi-5-Pytorch%28-mo-xing-da-jian-%2C%20-quan-zhong-chu-shi-hua-%2C%20-quan-zhong-bao-cun-he-jia-zai-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/6", "commentNum": 0, "wordCount": 7102, "description": "# Pytorch\u57fa\u7840\n## 1 Pytorch\u57fa\u7840\u77e5\u8bc6\n\n\u7528nn.Sequential\u6a21\u7ec4\u642d\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\n```python\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\n\nnet = nn.Sequential(nn.Linear(20, 256), nn.ReLU(), nn.Linear(256, 10))\n\nX = torch.rand(2, 20)\n\nnet(X)\n\n```\nnn.Sequential\u662f\u4e00\u4e2a\u6a21\u7ec4\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u6a21\u7ec4\u6765\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\n\n```python\n\nclass MLP(nn.Module):   # \u8868\u793a\u662fnn\u6a21\u7ec4\u7684\u5b50\u7c7b\n    def __init__(self):   # \u5b9a\u4e49\u6709\u54ea\u4e9b\u53c2\u6570\n        super().__init__()  # \u8c03\u7528\u4e00\u4e2a\u7236\u7c7b\uff0c\u6765\u5148\u8bbe\u7f6e\u9700\u8981\u7684\u5185\u90e8\u7684\u53c2\u6570\n        self.hidden = nn.Linear(20, 256)   # \u5b9a\u4e49\u4e00\u4e2a\u7ebf\u4e0b\u5c42\u5b58\u5728\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u4e2d\n        self.out = nn.Linear(256,10)\n\n    def forward(self, X):\n        return self.out(F.relu(self.hidden(X)))\n\nnet = MLP()\nnet(X)\n\n```\n\n\u5982\u4f55\u5b9e\u73b0\u524d\u9762\u7684nn.Sequential\u6a21\u7ec4\n```python\n\nclass MySequential(nn.Module):\n    def __init__(self, *args):  #*args\u8868\u793a\u63a5\u5165\u4e00\u4e2a\u6709\u5e8f\u5217\u8868, **\u8868\u793a\u5b57\u5178\n        super().__init__()\n        for block in args:\n            self._modules[block] = block  # \u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u5b57\u5178,_modules\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5bb9\u5668\uff0c\u8868\u793a\u653e\u8fdb\u53bb\u7684\u662f\u6bcf\u4e00\u5c42\u7f51\u7edc\n\n    def forward(self, X):\n        for block in self._modules.values():\n            X = block(X)    #\u5229\u7528\u6bcf\u4e00\u5c42\u7f51\u7edc\u5904\u7406\u8f93\u5165X\n        return X\n\nnet = MySequential(nn.Linear(20, 256), nn.ReLU(), nn.Linear(256, 10))\nnet(X)\n\n```\n\n\u5f53Sequential\u8fd9\u4e2a\u7c7b\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u8ba1\u7b97\u9700\u6c42\u65f6,\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u6765\u5b9e\u73b0\u7279\u6b8a\u7684\u8ba1\u7b97\n\n```python\nclass FixedHiddenMLP(nn.Module):\n    def __init__(self):\n        super().__init__()\n        # \u4e0d\u8ba1\u7b97\u68af\u5ea6\u7684\u968f\u673a\u6743\u91cd\u53c2\u6570\u3002", "top": 0, "createdAt": 1745484448, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-24", "dateLabelColor": "#0969da"}, "P7": {"htmlDir": "docs/post/shen-du-xue-xi-6-Pytorch GPU-de-shi-yong.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e606-Pytorch GPU\u7684\u4f7f\u7528", "postUrl": "post/shen-du-xue-xi-6-Pytorch%20GPU-de-shi-yong.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/7", "commentNum": 0, "wordCount": 1193, "description": "# GPU\u7684\u4f7f\u7528\n\n\u4f7f\u7528!nvidia-smi\u6765\u67e5\u770bGPU\u72b6\u6001\n```python\n!nvidia-smi\n```\n\n```python\nimport torch\nfrom torch import nn\ntorch.device('cpu'), torch.cuda.device('cuda') # torch.cuda.device('cuda:1') \u8bbf\u95ee\u7b2c\u4e00\u4e2aGPU\n\n```\n\n\u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\u6765\u6d4b\u8bd5\u662f\u5426\u5b58\u5728GPU\u5982\u679c\u6ca1\u6709\u5219\u7528CPU\n\n```python\ndef try_gpu(i=0): #@save\n    '''\u5982\u679c\u5b58\u5728\uff0c\u5219\u8fd4\u56degpu(i)\uff0c\u5426\u5219\u8fd4\u56decpu()'''\n    if torch.cuda.device_count() >= i + 1:\n        return torch.device(f'cuda:{i}')\n    return torch.device('cpu')\n    \ndef try_all_gpus(): #@save\n    '''\u8fd4\u56de\u6240\u6709\u53ef\u7528\u7684GPU\uff0c\u5982\u679c\u6ca1\u6709GPU\uff0c\u5219\u8fd4\u56de[cpu(),]'''\n    devices = [torch.device(f'cuda:{i}')\n        for i in range(torch.cuda.device_count())]\n    return devices if devices else [torch.device('cpu')]\n    \ntry_gpu(), try_gpu(10), try_all_gpus()\n```\n\n\u67e5\u8be2\u5f20\u91cf\u5750\u5728\u7684\u8bbe\u5907\n\n```python\nx = torch.tensor([1, 2, 3])\nx.device\n```\n\u521b\u5efa\u5f20\u91cf\u65f6\uff0c\u653e\u5728GPU\u4e0a\n\n```python\n# \u521b\u5efa\u5f20\u91cf\u65f6\uff0c\u653e\u5728GPU\u4e0a\nX = torch.ones(2, 3, device=try_gpu())\nX\n\n# \u4e5f\u53ef\u4ee5\u5728\u7b2c\u4e8c\u4e2aGPU\u4e0a\u521b\u5efa\u5f20\u91cf\n# Y = torch.rand(2, 3, device=try_gpu(1))\n```\n\n\u5982\u679c\u4f60\u6709\u591a\u4e2aGPU\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2aGPU\u4e0a\u7684\u503ccopy\u5230\u53e6\u4e00\u4e2aGPU\u4e0a\nZ = X.cuda(1)  \u53ef\u4ee5\u5c06X\u7684\u503c\u4eceGPU0 copy\u5230GPU1\n\u6570\u503c\u5728\u4e00\u4e2aGPU\u4e0a\u624d\u80fd\u505a\u8ba1\u7b97\n\n\u5728GPU\u4e0a\u505a\u795e\u7ecf\u7f51\u7edc\n\n```python\n# \u5728GPU\u4e0a\u505a\u795e\u7ecf\u7f51\u7edc\nnet = nn.Sequential(nn.Linear(3, 1))\nnet = net.to(device=try_gpu())  # net.to\u5c06\u795e\u7ecf\u7f51\u7edc\u632a\u52a8\u52300\u53f7GPU\u4e0a ,\u7b49\u4e8e\u5c06\u7f51\u7edc\u7684\u53c2\u6570\u57280\u53f7GPU\u4e0acopy\u4e00\u4efd\n\nnet(X)  # x\u4e5f\u57280\u53f7GPU\u4e0a\nnet[0].weight.data.device  # \u67e5\u770b\u6743\u91cd\u53c2\u6570\u6240\u5728\u7684\u4f4d\u7f6e\n```\n\n\n\n\n\u3002", "top": 0, "createdAt": 1745486114, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-24", "dateLabelColor": "#0969da"}, "P8": {"htmlDir": "docs/post/shen-du-xue-xi-7-CNN-ji-chu.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e607-CNN\u57fa\u7840", "postUrl": "post/shen-du-xue-xi-7-CNN-ji-chu.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/8", "commentNum": 0, "wordCount": 6473, "description": "# CNN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\n## 1 CNN\u57fa\u7840\n\u4ece\u591a\u5c42\u611f\u77e5\u673a\uff08MLP\uff09\u5230\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u7684\u6f14\u8fdb\u4e2d\uff0c\u200b\u200b\u5e73\u79fb\u4e0d\u53d8\u6027\u200b\u200b\u548c\u200b\u200b\u5c40\u90e8\u6027\u200b\u200b\u662f\u4e24\u5927\u6838\u5fc3\u8bbe\u8ba1\u539f\u5219\uff0c\u5b83\u4eec\u89e3\u51b3\u4e86\u4f20\u7edfMLP\u5904\u7406\u56fe\u50cf\u65f6\u7684\u4f4e\u6548\u95ee\u9898\uff0c\u5e76\u6210\u4e3a\u5377\u79ef\u64cd\u4f5c\u7684\u7406\u8bba\u57fa\u7840\u3002", "top": 0, "createdAt": 1745590752, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-25", "dateLabelColor": "#0969da"}, "P9": {"htmlDir": "docs/post/shen-du-xue-xi-8-CNN(LeNet-mo-xing-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e608-CNN(LeNet\u6a21\u578b)", "postUrl": "post/shen-du-xue-xi-8-CNN%28LeNet-mo-xing-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/9", "commentNum": 0, "wordCount": 4943, "description": "# LeNet\u6a21\u578b\nLeNet\u662f\u6700\u65e9\u6bd4\u8f83\u7ecf\u5178\u7684CNN\u6a21\u578b\uff0c\u7528\u6765\u8bc6\u522b\u90ae\u4ef6\u4e0a\u7684\u90ae\u7f16\uff0c\u6216\u8005\u652f\u7968\u4e2d\u7684\u91d1\u989d\u3002", "top": 0, "createdAt": 1745672156, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-26", "dateLabelColor": "#0969da"}, "P10": {"htmlDir": "docs/post/shen-du-xue-xi-9-AlexNet-shen-du-juan-ji-shen-jing-wang-luo.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e609-AlexNet\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc", "postUrl": "post/shen-du-xue-xi-9-AlexNet-shen-du-juan-ji-shen-jing-wang-luo.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/10", "commentNum": 0, "wordCount": 3652, "description": "# AlexNet\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\nAlexNet\u662f\u5f15\u8d77\u4e86\u6df1\u5ea6\u5b66\u4e60\u70ed\u6f6e\u7684\u7b2c\u4e00\u4e2a\u7f51\u7edc\n\n> \u5728\u6df1\u5ea6\u5b66\u4e60\u4e4b\u524d\uff0c\u6700\u5e38\u7528\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u662f\u6838\u65b9\u6cd5\n\u9996\u5148\u63d0\u53d6\u7279\u5f81\n\u5229\u7528\u6838\u51fd\u6570\u6765\u8ba1\u7b97\u76f8\u5173\u6027\uff0c\u5224\u65ad\u9ad8\u7ef4\u7a7a\u95f4\u5185\u4e24\u4e2a\u70b9\u662f\u5426\u6709\u76f8\u5173\u6027\n\u7ecf\u8fc7\u6838\u51fd\u6570\u5904\u7406\u4e4b\u540e\u5c31\u4f1a\u53d8\u6210\u51f8\u4f18\u5316\u95ee\u9898\n\u6709\u975e\u5e38\u597d\u7684\u5b9a\u7406\u548c\u6570\u5b66\u57fa\u7840\n\n\u73b0\u5728SVM\u652f\u6301\u5411\u91cf\u673a\u4e5f\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4e0d\u600e\u4e48\u9700\u8981\u8c03\u53c2\uff0c\u5bf9\u53c2\u6570\u4e0d\u600e\u4e48\u654f\u611f\n\n\u5728\u65e9\u4e9b\u5e74\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u5de5\u4f5c\u4e3b\u8981\u5728\u7279\u5f81\u63d0\u53d6\u65b9\u9762\n\u5982\u679c\u5c06\u539f\u59cb\u56fe\u50cf\u76f4\u63a5\u8f93\u5165SVM\u6548\u679c\u8fd8\u975e\u5e38\u5dee\n\u56e0\u6b64\uff0c\u9700\u8981\u79d1\u5b66\u5bb6\u6216\u8005\u5de5\u7a0b\u5e08\u90fd\u63d0\u51fa\u4e86\u5927\u91cf\u7684\u65b9\u6cd5\u6765\u62bd\u53d6\u56fe\u7247\u4e2d\u7684\u7279\u5f81\u4fe1\u606f\n\nAlexNet \u8d62\u5f97\u4e862012\u5e74\u7684ImageNet\u7ade\u8d5b\n\n## 1 AlexNet\u6a21\u578b\n\n\u4e3b\u8981\u6539\u8fdb\uff1a\nDropout  (\u6a21\u578b\u53d8\u5927\u4e86\uff0c\u7528dropout\u6765\u6b63\u5219)\nReLU\nMaxPooling\n\nAlexNet\u5c31\u662f\u4e00\u4e2a\u66f4\u6df1\u66f4\u5927\u7684LeNet\u7f51\u7edc\uff0c\u4e24\u4e2a\u7f51\u7edc\u7ed3\u679c\u5bf9\u6bd4\u5982\u4e0b\uff1a\n\n![Image](https://github.com/user-attachments/assets/feb4ae15-401d-4cec-9484-b2e6dd84d3f7)\n\n\n\u76f8\u6bd4\u4e8eLeNet\uff0cAlexNet\u4f7f\u7528\u4e86\u66f4\u5927\u7684\u5377\u79ef\u6838\uff0c\u66f4\u5927\u7684\u6b65\u957f\uff0c\u56e0\u4e3a\u8f93\u5165\u7684\u56fe\u7247\u66f4\u5927\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u66f4\u5927\u7684\u6c60\u5316\u7a97\u53e3\uff0c\u4f7f\u7528\u4e86MaxPooling\u800c\u4e0d\u662fAvgPooling\n\u5e76\u4e14\u589e\u52a0\u4e86\u66f4\u591a\u7684\u5377\u79ef\u5c42\n\u6700\u540e\u4e5f\u7528\u4e86\u4e09\u5c42\u5168\u8fde\u63a5\u5c42\n\n\u66f4\u591a\u7ec6\u8282\uff1a\n\u6fc0\u6d3b\u51fd\u6570\u4eceSigmoid\u53d8\u4e3a\u4e86ReLU\uff0c\u51cf\u7f13\u68af\u5ea6\u6d88\u5931\n\u9690\u85cf\u5168\u8fde\u63a5\u5c42\u540e\u52a0\u5165\u4e86Dropout\u5c42\n\u505a\u4e86\u6570\u636e\u589e\u5f3a(\u5c06\u56fe\u7247\u505a\u4e86\u5f88\u591a\u53d8\u5316\uff0c\u968f\u673a\u622a\u53d6\uff0c\u8c03\u8282\u4eae\u5ea6\uff0c\u968f\u673a\u8c03\u8282\u8272\u6e29\u6765\u589e\u52a0\u6570\u636e\u7684\u53d8\u79cd)\n\nAlexNet\u7684\u53c2\u6570\u91cf\u5927\u6982\u662f46M\uff0cLeNet\u5927\u6982\u67090.6M\nAlexNet\u505a\u4e00\u6b21\u5148\u524d\u8ba1\u7b97\u5927\u6982\u6bd4LeNet\u8d35\u4e86250\u500d\n\n\u603b\u7ed3\uff1a\nAlexNet\u662f\u4e00\u4e2a\u66f4\u6df1\u7684LeNet\uff0c75X\u7684\u53c2\u6570\u4e2a\u6570\uff0c250X\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\n\u65b0\u5f15\u5165\u4e86\u4e22\u5f03\u6cd5(Dropout)\uff0cReLU\uff0c\u6700\u5927\u6c60\u5316\u5c42\uff0c\u548c\u6570\u636e\u589e\u5f3a\nAlexNet\u8d62\u4e0b\u4e862012\u5e74\u7684ImageNet\u7ade\u8d5b\uff0c\u6807\u5fd7\u7740\u65b0\u4e00\u8f6e\u7684\u795e\u7ecf\u7f51\u7edc\u70ed\u6f6e\u7684\u5f00\u59cb\n\n## 2 AlexNet\u7684\u4ee3\u7801\u5b9e\u73b0\n\n```python\nimport torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\nnet = nn.Sequential(\n    # \u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a11*11\u7684\u66f4\u5927\u7a97\u53e3\u6765\u6355\u6349\u5bf9\u8c61\u3002", "top": 0, "createdAt": 1745731634, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-27", "dateLabelColor": "#0969da"}, "P11": {"htmlDir": "docs/post/shen-du-xue-xi-10-VGG(-geng-shen-geng-da-de-CNN-mo-xing-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6010-VGG(\u66f4\u6df1\u66f4\u5927\u7684CNN\u6a21\u578b)", "postUrl": "post/shen-du-xue-xi-10-VGG%28-geng-shen-geng-da-de-CNN-mo-xing-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/11", "commentNum": 0, "wordCount": 3017, "description": "# VGG\u6a21\u578b\nAlexNet\u6bd4LeNet\u66f4\u6df1\u66f4\u5927\uff0c\u5f97\u5230\u66f4\u597d\u7684\u7cbe\u5ea6\n\u80fd\u4e0d\u80fd\u8bbe\u8ba1\u7684\u66f4\u6df1\u66f4\u5927\uff1f\n\n\u6709\u54ea\u4e9b\u9009\u9879\uff1a\n\u66f4\u591a\u5168\u8fde\u63a5\u5c42\uff08\u592a\u8d35\uff09\n\u66f4\u591a\u7684\u5377\u79ef\u5c42\n\u5c06\u5377\u79ef\u5c42\u7ec4\u5408\u6210\u5757\n\n## 1 VGG\u7684\u7ed3\u6784\nVGG\u5757\u5c06\u591a\u4e2a\u5377\u79ef\u5c42\u548c\u4e00\u4e2a\u6c60\u5316\u5c42\u7ec4\u5408\u6210\u5757\uff1a\n\n![Image](https://github.com/user-attachments/assets/d1f806b7-8baa-4021-9eab-d59295263eeb)\n\n\u5b83\u8fd9\u91cc\u9762\u7528\u4e863x3\u7684\u5377\u79ef\u6838\uff0c\u539f\u56e0\u662f\u5728\u76f8\u540c\u7684\u8ba1\u7b97\u5f00\u9500\u4e0b\uff0c3x3\u6bd45\nx5\u7684\u5377\u79ef\u6838\u62e5\u6709\u66f4\u597d\u7684\u6548\u679c\u3002", "top": 0, "createdAt": 1745741074, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-27", "dateLabelColor": "#0969da"}, "P12": {"htmlDir": "docs/post/shen-du-xue-xi-11-NiN-mo-xing-(-li-yong-1x1-de-juan-ji-ceng-lai-qu-dai-quan-lian-jie-shen-jing-wang-luo-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6011-NiN\u6a21\u578b(\u5229\u75281x1\u7684\u5377\u79ef\u5c42\u6765\u53d6\u4ee3\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc)", "postUrl": "post/shen-du-xue-xi-11-NiN-mo-xing-%28-li-yong-1x1-de-juan-ji-ceng-lai-qu-dai-quan-lian-jie-shen-jing-wang-luo-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/12", "commentNum": 0, "wordCount": 2573, "description": "# NiN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\n\u65e0\u8bba\u662fLeNet, AlexNet\u6216\u8005VGG\u90fd\u662f\u4f7f\u7528\u4e86\u4e00\u7cfb\u5217\u5377\u79ef\u5c42\u62c9\u63d0\u53d6\u7a7a\u95f4\u7ed3\u6784\u7279\u5f81\uff0c\u7136\u540e\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u5bf9\u7279\u5f81\u7684\u8868\u5f81\u8fdb\u884c\u5904\u7406\u3002", "top": 0, "createdAt": 1745745259, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-27", "dateLabelColor": "#0969da"}, "P13": {"htmlDir": "docs/post/shen-du-xue-xi-12-GoogLeNet(Inception-kuai-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6012-GoogLeNet(Inception\u5757)", "postUrl": "post/shen-du-xue-xi-12-GoogLeNet%28Inception-kuai-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/13", "commentNum": 0, "wordCount": 4260, "description": "# GoogLeNet\u6a21\u578b\n\n\u5b83\u662f\u4e00\u79cd\u542b\u5e76\u884c\u8fde\u63a5\u7684\u7f51\u7edc\n\u4e4b\u524d\u7684\u6a21\u578b\u6bd4\u5982LeNet\uff0cAlexNet\uff0cV2G\u7528\u4e86\u4e0d\u540c\u89c4\u6a21\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6765\u63d0\u53d6\u56fe\u7247\u7279\u5f81\uff0c\u54ea\u5230\u5e95\u9009\u62e9\u54ea\u79cd\uff1f\n\nGoogLeNet\u7684\u505a\u6cd5\u5c31\u662f\u5168\u90fd\u8981\n\n## 1 GoogLeNet\u6a21\u578b\u7684\u7ed3\u6784\n\n### 1.1 Inception\u5757\nInception\u5757\u4ece\u56db\u4e2a\u4e0d\u540c\u7684\u8def\u5f84\u6765\u62bd\u53d6\u4e0d\u540c\u5c42\u9762\u7684\u4fe1\u606f\uff0c\u7136\u540e\u5728\u8f93\u51fa\u901a\u9053\u7ef4\u5ea6\u8fdb\u884c\u5408\u5e76\n\n![Image](https://github.com/user-attachments/assets/110d6acd-620b-4d01-a1ae-22881c317bd7)\n\nInception\u5757\u7531\u56db\u6761\u5e76\u884c\u8def\u5f84\u7ec4\u6210\n\n\u524d\u4e09\u6761\u8def\u5f84\u4f7f\u7528\u7a97\u53e3\u5927\u5c0f\u4e3a1\u00d71\u30013\u00d73\u548c5\u00d75\u7684\u5377\u79ef\u5c42\uff0c\n\u4ece\u4e0d\u540c\u7a7a\u95f4\u5927\u5c0f\u4e2d\u63d0\u53d6\u4fe1\u606f\u3002", "top": 0, "createdAt": 1745759400, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-27", "dateLabelColor": "#0969da"}, "P14": {"htmlDir": "docs/post/shen-du-xue-xi-13-Batch_Normalization.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6013-Batch_Normalization", "postUrl": "post/shen-du-xue-xi-13-Batch_Normalization.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/14", "commentNum": 0, "wordCount": 5588, "description": "# Batch Normalization \u6279\u91cf\u5f52\u4e00\u5316\n\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u4e00\u4e2a\u7f51\u7edc\u5f88\u6df1\u7684\u60c5\u51b5\u4e0b\n\u68af\u5ea6\u53cd\u4f20\u8fc7\u7a0b\u4e2d\uff0c\u4e0a\u9762\u7684\u68af\u5ea6\u4f1a\u66f4\u5927\uff0c\u4e0b\u9762\u7684\u68af\u5ea6\u4f1a\u66f4\u5c0f\n\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e0a\u9762\u7684\u7f51\u7edc\u4f1a\u5f88\u5feb\u6536\u655b\uff0c\u800c\u4e0b\u9762\u7684\u7f51\u7edc\u4f1a\u66f4\u65b0\u5f88\u6162\n\n\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\n\u5f53\u4e0b\u9762\u7684\u53c2\u6570\u53d1\u751f\u53d8\u5316\u540e\uff0c\u5bf9\u8f93\u5165\u62bd\u8c61\u51fa\u6765\u7684\u7279\u5f81\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5219\u4e0a\u9762\u7684\u7f51\u7edc\u53c8\u9700\u8981\u91cd\u65b0\u8bad\u7ec3\n\u5bfc\u81f4\u6536\u655b\u53d8\u6162\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528batch normalization \u6765\u5c06\u8f93\u51fa\u7684\u5747\u503c\u548c\u65b9\u5dee\u8fdb\u884c\u56fa\u5b9a\uff0c\n\u8fd9\u6837\u7684\u597d\u5904\u662f\u5728\u8bad\u7ec3\u5e95\u90e8\u65f6\u53ef\u4ee5\u907f\u514d\u53d8\u5316\u9876\u90e8\u5c42\n\n## 1 \u6279\u91cf\u5f52\u4e00\u5316\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6279\u91cf\u6570\u636e\uff0c\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee\n\n![Image](https://github.com/user-attachments/assets/ae2e4981-d004-4362-ba02-249d5e4b4f6a)\n\n\u5229\u7528\u5747\u503c\u548c\u65b9\u5dee\u6765\u8fdb\u884c\u5f52\u4e00\u5316\n\n![Image](https://github.com/user-attachments/assets/d56f9e07-9069-4606-9060-715ed691bee4)\n\n\u7279\u70b9\uff1a\n\u53ef\u4ee5\u5b66\u4e60\u7684\u53c2\u6570\u662f\\beta \u548c \\gamma\n\u4f5c\u7528\u7684\u4f4d\u7f6e\uff1a\n \u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u4e0a\uff0c\u6fc0\u6d3b\u51fd\u6570\u524d\n \u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u7684\u8f93\u5165\u4e0a\n\u5bf9\u4e8e\u5168\u8fde\u63a5\u5c42\uff0c\u4f5c\u7528\u5728\u7279\u5f81\u7ef4\n\u5bf9\u4e8e\u5377\u79ef\u5c42\uff0c\u4f5c\u7528\u5728\u901a\u9053\u5c42\n\n\u603b\u7ed3\uff1a\n\u6279\u91cf\u5f52\u4e00\u5316\u56fa\u5b9a\u5c0f\u6279\u91cf\u7684\u5747\u503c\u548c\u65b9\u5dee\uff0c\u7136\u540e\u5b66\u4e60\u51fa\u9002\u5408\u7684\u504f\u79fb\u7684\u7f29\u653e\n\u53ef\u4ee5\u52a0\u901f\u6536\u655b\u901f\u5ea6\uff0c\u4f46\u4e00\u822c\u4e0d\u6539\u53d8\u6a21\u578b\u7cbe\u5ea6\n\n## \u6279\u91cf\u5f52\u4e00\u5316\u5b9e\u73b0\n\n\u4ece0\u5b9e\u73b0\u6279\u91cf\u5f52\u4e00\u5316\n\n```python\nimport torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\n# \u6279\u91cf\u5f52\u4e00\u5316\u4ece0\u5f00\u59cb\u5b9e\u73b0,\uff08\u8f93\u5165\uff0c\uff08\u53ef\u4ee5\u5b66\u7684\u4e24\u4e2a\u53c2\u6570\uff09\uff0c\u5168\u5c40\u7684\u5747\u503c\uff0c\u5168\u5c40\u7684\u65b9\u5dee\uff0c\u907f\u514d\u96640\uff0c\u7528\u6765\u66f4\u65b0\u5168\u5c40\u5747\u503c\u548c\u65b9\u5dee\u7684\uff09\ndef batch_norm(X, gamma, beta, moving_mean, moving_var, eps, momentum):\n  # \u901a\u8fc7is_grad_enabled\u6765\u5224\u65ad\u5f53\u524d\u6a21\u5f0f\u662f\u8bad\u7ec3\u6a21\u5f0f\u8fd8\u662f\u9884\u6d4b\u6a21\u5f0f\n  if not torch.is_grad_enabled():\n    # \u5982\u679c\u662f\u5728\u9884\u6d4b\u6a21\u5f0f\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u4f20\u5165\u7684\u79fb\u52a8\u5e73\u5747\u6240\u5f97\u7684\u5747\u503c\u548c\u65b9\u5dee\n    X_hat = (X- moving_mean) / torch.sqrt(moving_var + eps)\n  else:\n    assert len(X.shape) in (2, 4)\n    if len(X.shape) == 2:\n      # \u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u7684\u60c5\u51b5\uff0c\u8ba1\u7b97\u7279\u5f81\u7ef4\u4e0a\u7684\u5747\u503c\u548c\u65b9\u5dee\n      mean = X.mean(dim=0)\n      var = ((X- mean) ** 2).mean(dim=0)\n    else:\n      # \u4f7f\u7528\u4e8c\u7ef4\u5377\u79ef\u5c42\u7684\u60c5\u51b5\uff0c\u8ba1\u7b97\u901a\u9053\u7ef4\u4e0a\uff08axis=1\uff09\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002", "top": 0, "createdAt": 1745830325, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-28", "dateLabelColor": "#0969da"}, "P15": {"htmlDir": "docs/post/shen-du-xue-xi-14-ResNet-can-cha-wang-luo.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6014-ResNet\u6b8b\u5dee\u7f51\u7edc", "postUrl": "post/shen-du-xue-xi-14-ResNet-can-cha-wang-luo.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/15", "commentNum": 0, "wordCount": 4013, "description": "# ResNet\u6b8b\u5dee\u7f51\u7edc\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u7f51\u7edc\u662f\u4e0d\u662f\u505a\u7684\u8d8a\u6df1\u8d8a\u597d\n\u7f51\u7edc\u8d8a\u6df1\u8d8a\u80fd\u62df\u5408\u66f4\u52a0\u590d\u6742\u7684\u95ee\u9898\uff1f\n\u4f46\u662f\u968f\u7740\u7f51\u7edc\u7684\u52a0\u6df1\uff0c\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u504f\u5dee\uff0c\u53ef\u80fd\u6027\u80fd\u4e0d\u4f1a\u589e\u52a0\uff0c\u800c\u5f00\u9500\u4f1a\u589e\u5927\n\n\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff1a\u5f53\u589e\u52a0\u65b0\u7684\u5c42\u7684\u65f6\u5019\u81f3\u5c11\u4e0d\u4f1a\u8ba9\u6a21\u578b\u53d8\u5dee\u3002", "top": 0, "createdAt": 1745834931, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-28", "dateLabelColor": "#0969da"}, "P16": {"htmlDir": "docs/post/shen-du-xue-xi-15--duo-GPU-bing-xing.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6015-\u591aGPU\u5e76\u884c", "postUrl": "post/shen-du-xue-xi-15--duo-GPU-bing-xing.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/16", "commentNum": 0, "wordCount": 7497, "description": "# \u5355\u673a\u591a\u5361\u5e76\u884c\n\u4e00\u4e2a\u673a\u5668\u53ef\u4ee5\u5b89\u88c5\u591a\u4e2aGPU\n\u5728\u8bad\u7ec3\u548c\u9884\u6d4b\u65f6\uff0c\u53ef\u4ee5\u5c06\u5c0f\u6279\u91cf\u8ba1\u7b97\u5207\u5206\u5230\u591a\u4e2aGPU\u4e0a\u6765\u8fbe\u5230\u52a0\u901f\u7684\u76ee\u7684\n\n\u5e38\u7528\u7684\u5207\u5206\u65b9\u6848\u6709\uff1a\n- \u6570\u636e\u5e76\u884c-\u5c06\u5c0f\u6279\u91cf\u6570\u636e\u5206\u6210n\u5757\uff0c\u6bcf\u4e2aGPU\u62ff\u5230\u5b8c\u6574\u7684\u53c2\u6570\u8ba1\u7b97\u4e00\u5757\u6570\u636e\u7684\u68af\u5ea6\uff08\u901a\u5e38\u6027\u80fd\u66f4\u597d\uff09\n- \u6a21\u578b\u5e76\u884c-\uff08\u5c06\u6a21\u578b\u5206\u6210n\u5757\uff0c\u6bcf\u4e2aGPU\u62ff\u5230\u4e00\u5757\u6a21\u578b\u8ba1\u7b97\u5b83\u7684\u524d\u5411\u548c\u53cd\u5411\u7ed3\u679c\uff0c\u901a\u5e38\u9002\u7528\u4e8e\u6a21\u578b\u5927\u5230\u5355GPU\u653e\u4e0d\u4e0b\uff09\n- \u901a\u9053\u5e76\u884c\uff08\u6570\u636e+\u6a21\u578b\u5e76\u884c\uff09\n\n## 1 \u6570\u636e\u5e76\u884c\n\n\u4ee5\u4e24\u4e2aGPU\u4e3a\u4f8b\uff1a\n- \u5728\u4efb\u4f55\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u7ed9\u5b9a\u7684\u968f\u673a\u5c0f\u6279\u91cf\u6570\u636e\u5c06\u88ab\u5206\u6210\u4e24\u4efd\uff0c\u7136\u540e\u5747\u5300\u5206\u914d\u7ed9\u6bcf\u4e2aGPU\n- \u6bcf\u4e2aGPU\u4f1a\u5229\u7528\u5206\u914d\u7684\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\n- \u6bcf\u4e2aGPU\u4f1a\u5c06\u8ba1\u7b97\u7684\u68af\u5ea6\u53d1\u51fa\u53bb\uff0c\u5e76\u4e14\u8fdb\u884c\u76f8\u52a0\uff0c\u4ee5\u83b7\u5f97\u5f53\u524d\u5c0f\u6279\u91cf\u7684\u968f\u673a\u68af\u5ea6\n- \u5c06\u8ba1\u7b97\u7684\u805a\u5408\u68af\u5ea6\u53d1\u9001\u7ed9\u6bcf\u4e2aGPU\uff0c\u6bcf\u4e2aGPU\u5229\u7528\u5f97\u5230\u7684\u968f\u673a\u68af\u5ea6\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\n\n\u5927\u81f4\u7684\u6d41\u7a0b\u56fe\u4e3a\uff1a\n\n![Image](https://github.com/user-attachments/assets/b10e95f5-9f1d-4768-a684-f6103fa8f600)\n\n\u603b\u7ed3\uff1a\n-  \u5f53\u4e00\u4e2a\u6a21\u578b\u80fd\u7528\u5230\u5355\u5361\u8ba1\u7b97\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u6570\u636e\u5e76\u884c\u62d3\u5c55\u5230\u591a\u5361\u4e0a\n- \u6a21\u578b\u5e76\u884c\u5219\u7528\u5728\u8d85\u5927\u6a21\u578b\u4e0a\n\n## 2 \u6570\u636e\u5e76\u884c\u7684\u4ece0\u5b9e\u73b0\n\n\u4ee5LeNet\u4e3a\u4f8b\u6765\u6765\u5b9e\u73b0\n\n- \u5148\u6784\u5efaLeNet\u6a21\u578b\n\n```python\n%matplotlib inline\nimport torch\nfrom torch import nn\nfrom torch.nn import functional as F\nfrom d2l import torch as d2l\n\n# \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\nscale = 0.01\nW1 = torch.randn(size=(20, 1, 3, 3)) * scale\nb1 = torch.zeros(20)\nW2 = torch.randn(size=(50, 20, 5, 5)) * scale\nb2 = torch.zeros(50)\nW3 = torch.randn(size=(800, 128)) * scale\nb3 = torch.zeros(128)\nW4 = torch.randn(size=(128, 10)) * scale\nb4 = torch.zeros(10)\nparams = [W1, b1, W2, b2, W3, b3, W4, b4]\n\n\n# \u5b9a\u4e49\u6a21\u578b\ndef lenet(X, params):\n    h1_conv = F.conv2d(input=X, weight=params[0], bias=params[1])\n    h1_activation = F.relu(h1_conv)\n    h1 = F.avg_pool2d(input=h1_activation, kernel_size=(2, 2), stride=(2, 2))\n    h2_conv = F.conv2d(input=h1, weight=params[2], bias=params[3])\n    h2_activation = F.relu(h2_conv)\n    h2 = F.avg_pool2d(input=h2_activation, kernel_size=(2, 2), stride=(2, 2))\n    h2 = h2.reshape(h2.shape[0],-1)\n    h3_linear = torch.mm(h2, params[4]) + params[5]\n    h3 = F.relu(h3_linear)\n    y_hat = torch.mm(h3, params[6]) + params[7]\n    return y_hat\n    \n# \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\nloss = nn.CrossEntropyLoss(reduction='none')\n```\n\n- \u5411\u591a\u4e2a\u8bbe\u5907\u5206\u53d1\u53c2\u6570\n\n```python\n# \u7ed9\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u5c06\u5b83\u53d1\u9001\u5230\u54ea\u4e2aGPU\u4e0a\ndef get_params(params, device):  \n    new_params = [p.to(device) for p in params] \n    for p in new_params:    # \u9700\u8981\u8ba1\u7b97\u68af\u5ea6\n        p.requires_grad_()\n    return new_params\n\n# \u5c06\u6240\u6709\u53c2\u6570\u590d\u5236\u5230\u4e00\u4e2aGPU\nnew_params = get_params(params, d2l.try_gpu(0))\nprint('b1 \u6743\u91cd:', new_params[1])\nprint('b1 \u68af\u5ea6:', new_params[1].grad)\n```\n\n- \u4f7f\u7528allreduce\u51fd\u6570\u5c06\u6240\u6709\u5411\u91cf\u76f8\u52a0\uff0c\u5e76\u5c06\u7ed3\u679c\u5e7f\u64ad\u7ed9\u6240\u6709GPU\n\n```python\n# \u5c06\u6240\u6709\u5411\u91cf\u76f8\u52a0,\u5e76\u5e7f\u64ad\u7ed9\u6240\u6709GPU\ndef allreduce(data):\n    for i in range(1, len(data)):\n        data[0][:] += data[i].to(data[0].device)  # \u5c06\u6570\u636e\u590d\u5236\u5230GPU0\u4e0a\u8fdb\u884c\u76f8\u52a0\n    for i in range(1, len(data)):\n        data[i][:] = data[0].to(data[i].device)  # GPU0\u8ba1\u7b97\u5f97\u5230\u7684\u7ed3\u679c\u53d1\u9001\u7ed9\u6240\u6709GPU\n\ndata = [torch.ones((1, 2), device=d2l.try_gpu(i)) * (i + 1) for i in range(2)]\nprint('allreduce\u4e4b\u524d\uff1a\\n', data[0], '\\n', data[1])\nallreduce(data)\nprint('allreduce\u4e4b\u540e\uff1a\\n', data[0], '\\n', data[1])\n```\n\n- \u5c06\u4e00\u4e2a\u5c0f\u6279\u91cf\u6570\u636e\u5747\u5300\u5206\u5e03\u5728\u591a\u4e2aGPU\u4e0a\n\n```python\ndata = torch.arange(20).reshape(4, 5)\ndevices = [torch.device('cuda:0'), torch.device('cuda:1')]\nsplit = nn.parallel.scatter(data, devices)  # \u5c06\u6570\u636e\u5747\u5300\u5207\u5f00\uff0c\u5206\u914d\u7ed9\u6bcf\u4e2aGPU\u4e0a\nprint('input :', data)\nprint('load into', devices)\nprint('output:', split)\n\n```\n\n- \u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u5b9a\u4e49\u4e00\u4e2asplit_batch\u51fd\u6570\uff0c\u5c06\u6570\u636e\u548c\u6807\u7b7e\u90fd\u8fdb\u884c\u62c6\u5206\n\n```python\ndef split_batch(X, y, devices):\n    '''\u5c06X\u548cy\u62c6\u5206\u5230\u591a\u4e2a\u8bbe\u5907\u4e0a'''\n    assert X.shape[0] == y.shape[0]\n    return (nn.parallel.scatter(X, devices),\n            nn.parallel.scatter(y, devices))\n```\n\n- \u5b9a\u4e49\u4e00\u4e2a\u591aGPU\u8bad\u7ec3\u5c0f\u6279\u91cf\u6570\u636e\u7684\u51fd\u6570\n\n```python\n# \u5b9a\u4e49\u4e00\u4e2a\u591aGPU\u8bad\u7ec3\u5c0f\u6279\u91cf\u6570\u636e\u7684\u51fd\u6570\ndef train_batch(X, y, device_params, devices, lr): # \u8f93\u5165,\u6240\u6709GPU\u4e0a\u7684\u53c2\u6570\uff0cGPU,\u5b66\u4e60\u7387\n    X_shards, y_shards = split_batch(X, y, devices)  # \u62c6\u5206\u6570\u636e\n    # \u5728\u6bcf\u4e2aGPU\u4e0a\u5206\u522b\u8ba1\u7b97\u635f\u5931, ls\u4e2d\u5305\u542b\u4e86\u6240\u6709GPU\u4e2d\u7684\u635f\u5931\n    ls = [loss(lenet(X_shard, device_W), y_shard).sum()\n                    for X_shard, y_shard, device_W in zip(\n                        X_shards, y_shards, device_params)]\n    for l in ls: # \u53cd\u5411\u4f20\u64ad\u5728\u6bcf\u4e2aGPU\u4e0a\u5206\u522b\u6267\u884c\n        l.backward()\n    # \u5c06\u6bcf\u4e2aGPU\u7684\u6240\u6709\u68af\u5ea6\u76f8\u52a0\uff0c\u5e76\u5c06\u5176\u5e7f\u64ad\u5230\u6240\u6709GPU\n    with torch.no_grad():\n        for i in range(len(device_params[0])):\n            allreduce([device_params[c][i].grad for c in range(len(devices))])\n    # \u5728\u6bcf\u4e2aGPU\u4e0a\u5206\u522b\u66f4\u65b0\u6a21\u578b\u53c2\u6570\n    for param in device_params:\n        d2l.sgd(param, lr, X.shape[0]) # \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u5168\u5c3a\u5bf8\u7684\u5c0f\u6279\u91cf\n```\n\n- \u5f00\u59cb\u8bad\u7ec3\n\n```python\ndef train(num_gpus, batch_size, lr):\n    train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)\n    devices = [d2l.try_gpu(i) for i in range(num_gpus)]\n    # \u5c06\u6a21\u578b\u53c2\u6570\u590d\u5236\u5230num_gpus\u4e2aGPU\n    device_params = [get_params(params, d) for d in devices]\n    num_epochs = 10\n    animator = d2l.Animator('epoch', 'test acc', xlim=[1, num_epochs])\n    timer = d2l.Timer()\n    for epoch in range(num_epochs):\n        timer.start()\n        for X, y in train_iter:\n        # \u4e3a\u5355\u4e2a\u5c0f\u6279\u91cf\u6267\u884c\u591aGPU\u8bad\u7ec3\n            train_batch(X, y, device_params, devices, lr)\n            torch.cuda.synchronize()  # \u540c\u6b65\u4e00\u6b21,\u4fdd\u8bc1\u6bcf\u4e2aGPU\u90fd\u5b8c\u6210\u4e86\n        timer.stop()\n        # \u5728GPU0\u4e0a\u8bc4\u4f30\u6a21\u578b\n        animator.add(epoch + 1, (d2l.evaluate_accuracy_gpu(\n            lambda x: lenet(x, device_params[0]), test_iter, devices[0]),))\n    print(f'\u6d4b\u8bd5\u7cbe\u5ea6\uff1a{animator.Y[0][-1]:.2f}\uff0c{timer.avg():.1f}\u79d2/\u8f6e\uff0c'\n            f'\u5728{str(devices)}')\n\n# \u5355GPU\u8fd0\u884c\ntrain(num_gpus=1, batch_size=256, lr=0.2)\n\n# \u591aGPU\u8fd0\u884c\ntrain(num_gpus=2, batch_size=256, lr=0.2)\n```\n\n[\u4ee3\u7801\u94fe\u63a5](https://github.com/kxmust/Deep_learning_note/blob/main/18.1parallel_computing.ipynb)\n\n## 3 \u6570\u636e\u5e76\u884c\u7684\u7b80\u5355\u5b9e\u73b0\n\n- \u9996\u5148\u6784\u5efa\u6a21\u578b\n\n```python\nimport torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\n# \u5b9a\u4e49\u6a21\u578b\ndef resnet18(num_classes, in_channels=1):\n    '''\u7a0d\u52a0\u4fee\u6539\u7684ResNet-18\u6a21\u578b'''\n    def resnet_block(in_channels, out_channels, num_residuals,\n                    first_block=False):\n        blk = []\n        for i in range(num_residuals):\n            if i == 0 and not first_block:\n                blk.append(d2l.Residual(out_channels,\n                        use_1x1conv=True, strides=2))\n            else:\n                blk.append(d2l.Residual(out_channels, out_channels))\n        return nn.Sequential(*blk)\n\n    # \u8be5\u6a21\u578b\u4f7f\u7528\u4e86\u66f4\u5c0f\u7684\u5377\u79ef\u6838\u3001\u6b65\u957f\u548c\u586b\u5145\uff0c\u800c\u4e14\u5220\u9664\u4e86\u6700\u5927\u6c47\u805a\u5c42\n    net = nn.Sequential(\n        nn.Conv2d(in_channels, 64, kernel_size=3, stride=1, padding=1),\n        nn.BatchNorm2d(64),\n        nn.ReLU())\n    net.add_module('resnet_block1', resnet_block(64, 64, 2, first_block=True))\n    net.add_module('resnet_block2', resnet_block(64, 128, 2))\n    net.add_module('resnet_block3', resnet_block(128, 256, 2))\n    net.add_module('resnet_block4', resnet_block(256, 512, 2))\n    net.add_module('global_avg_pool', nn.AdaptiveAvgPool2d((1,1)))\n    net.add_module('fc', nn.Sequential(nn.Flatten(),\n    nn.Linear(512, num_classes)))\n    return net\n```\n\n- \u7f51\u7edc\u521d\u59cb\u5316\n\n```python\n# \u7f51\u7edc\u521d\u59cb\u5316\nnet = resnet18(10)\n# \u83b7\u53d6GPU\u5217\u8868\ndevices = d2l.try_all_gpus()\n# \u6211\u4eec\u5c06\u5728\u8bad\u7ec3\u4ee3\u7801\u5b9e\u73b0\u4e2d\u521d\u59cb\u5316\u7f51\u7edc\n```\n\n- \u8bad\u7ec3\u51fd\u6570\n\n```python\ndef train(net, num_gpus, batch_size, lr):\n    train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)\n    devices = [d2l.try_gpu(i) for i in range(num_gpus)]\n    \n    def init_weights(m):\n        if type(m) in [nn.Linear, nn.Conv2d]:\n            nn.init.normal_(m.weight, std=0.01)\n    net.apply(init_weights)\n    \n    # \u5728\u591a\u4e2aGPU\u4e0a\u8bbe\u7f6e\u6a21\u578b\n    net = nn.DataParallel(net, device_ids=devices) #\u7ed9\u5b9a\u4e00\u4e2a\u7f51\u7edc,\u7ed9\u5b9aGPU\uff0c\u7136\u540e\u5c06Net\u590d\u5236\u5230\u6bcf\u4e2aGPU\u4e0a\n    trainer = torch.optim.SGD(net.parameters(), lr)\n    loss = nn.CrossEntropyLoss()\n    timer, num_epochs = d2l.Timer(), 10\n    animator = d2l.Animator('epoch', 'test acc', xlim=[1, num_epochs])\n    for epoch in range(num_epochs):\n        net.train()\n        timer.start()\n        for X, y in train_iter:\n            trainer.zero_grad()\n            X, y = X.to(devices[0]), y.to(devices[0])\n            l = loss(net(X), y)\n            l.backward()\n            trainer.step()\n        timer.stop()\n        animator.add(epoch + 1, (d2l.evaluate_accuracy_gpu(net, test_iter),))\n    print(f'\u6d4b\u8bd5\u7cbe\u5ea6\uff1a{animator.Y[0][-1]:.2f}\uff0c{timer.avg():.1f}\u79d2/\u8f6e\uff0c'\n        f'\u5728{str(devices)}')\n\n# \u5355\u5361\u8bad\u7ec3\ntrain(net, num_gpus=1, batch_size=256, lr=0.1)\n# \u591a\u5361\u8bad\u7ec3\ntrain(net, num_gpus=2, batch_size=512, lr=0.2)\n```\n\n[\u4ee3\u7801\u94fe\u63a5](https://github.com/kxmust/Deep_learning_note/blob/main/18.2parallel_computing_simple.ipynb)\n\u3002", "top": 0, "createdAt": 1745915210, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-29", "dateLabelColor": "#0969da"}, "P17": {"htmlDir": "docs/post/shen-du-xue-xi-16--shu-ju-zeng-guang.html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6016-\u6570\u636e\u589e\u5e7f", "postUrl": "post/shen-du-xue-xi-16--shu-ju-zeng-guang.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/17", "commentNum": 0, "wordCount": 2343, "description": "# \u6570\u636e\u589e\u5e7f\n\n\u56fe\u50cf\u589e\u5e7f\u5728\u5bf9\u8bad\u7ec3\u56fe\u50cf\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u968f\u673a\u53d8\u5316\u4e4b\u540e\uff0c\u751f\u6210\u76f8\u4f3c\u4f46\u4e0d\u540c\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u4ece\u800c\u6269\u5927\u4e86\u8bad\u7ec3\u96c6\u7684\u89c4\u6a21\n\n\u968f\u673a\u6539\u53d8\u8bad\u7ec3\u6837\u672c\u53ef\u4ee5\u51cf\u5c11\u6a21\u578b\u5bf9\u67d0\u4e9b\u5c5e\u6027\u7684\u4f9d\u8d56\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\n\n\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u88c1\u526a\u56fe\u50cf\uff0c\u4f7f\u611f\u5174\u8da3\u7684\u5bf9\u8c61\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u51cf\u5c11\u6a21\u578b\u5bf9\u4e8e\u5bf9\u8c61\u51fa\u73b0\u4f4d\u7f6e\u7684\u4f9d\u8d56\u3002", "top": 0, "createdAt": 1745926441, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-29", "dateLabelColor": "#0969da"}, "P18": {"htmlDir": "docs/post/shen-du-xue-xi-17--qian-yi-xue-xi-(-wei-diao-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6017-\u8fc1\u79fb\u5b66\u4e60(\u5fae\u8c03)", "postUrl": "post/shen-du-xue-xi-17--qian-yi-xue-xi-%28-wei-diao-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/18", "commentNum": 0, "wordCount": 4361, "description": "# \u8fc1\u79fb\u5b66\u4e60(\u5fae\u8c03)\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u8bbe\u8ba1\u4e00\u4e2a\u6a21\u578b\u6765\u505a\u67d0\u4e2a\u4efb\u52a1\uff0c\u800c\u5df2\u7ecf\u6709\u7c7b\u4f3c\u7684\u73b0\u6709\u6a21\u578b\u4e86\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5bf9\u73b0\u6709\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u6765\u5b8c\u6210\u65b0\u7684\u4efb\u52a1\n\n## \u5fae\u8c03 Fine-tuning\n\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u8f93\u51fa\u5c42\u7528\u4e8e\u5bf9\u7269\u54c1\u8fdb\u884c\u5206\u7c7b\uff0c\u5176\u4ed6\u5c42\u7528\u6765\u63d0\u53d6\u7279\u5f81\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u7684\u524dN\u5c42\u62ff\u8fc7\u6765\uff0c\u7136\u540e\u5bf9\u6700\u540e\u7684\u8f93\u51fa\u5c42\u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u5229\u7528\u6211\u4eec\u6536\u96c6\u7684\u6570\u636e\u8fdb\u884c\u5fae\u8c03\uff0c\u5c31\u80fd\u5f88\u597d\u7684\u5b8c\u6210\u65b0\u7684\u4efb\u52a1\u3002", "top": 0, "createdAt": 1745933158, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-04-29", "dateLabelColor": "#0969da"}, "P19": {"htmlDir": "docs/post/shen-du-xue-xi-18--mu-biao-jian-ce-(-shu-ju-ji-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6018-\u76ee\u6807\u68c0\u6d4b(\u6570\u636e\u96c6)", "postUrl": "post/shen-du-xue-xi-18--mu-biao-jian-ce-%28-shu-ju-ji-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/19", "commentNum": 0, "wordCount": 4811, "description": "# \u76ee\u6807\u68c0\u6d4b\n\u8bc6\u522b\u4e00\u5f20\u56fe\u7247\u4e2d\u7684\u6240\u6709\u7269\u4f53\uff0c\u6bd4\u5982\u591a\u4e2a\u72d7\u6216\u8005\u732b\uff0c\u5e76\u4e14\u8fd8\u8981\u7528\u65b9\u6846\u6807\u6ce8\u51fa\u6bcf\u4e2a\u7269\u4f53\u7684\u4f4d\u7f6e\n\n**\u4e00\u4e2a\u8fb9\u7f18\u6846\u53ef\u4ee5\u7528\u56db\u4e2a\u6570\u5b57\u6765\u5b9a\u4e49\uff1a**\n\u5de6\u4e0ax\uff0c\u53f3\u4e0ay\uff0c \u53f3\u4e0bx\u548c\u53f3\u4e0by   \uff08\u6ce8\u610f\uff0c\u4e00\u4e2a\u4e00\u4e2a\u56fe\u7247\u7684\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9\uff09\n\u5de6\u4e0ax\uff0c\u53f3\u4e0ay\uff0c\u5bbd\u548c\u9ad8\n\n**\u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\uff1a**\n\u4e00\u4e2a\u56fe\u7247\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7c7b\uff0c\u6240\u4ee5\u4e00\u822c\u7528CSV\u6587\u4ef6\u6765\u5b58\n\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u7269\u4f53\n\u6240\u4ee5\u4e00\u5f20\u56fe\u7247\u53ef\u80fd\u9700\u8981\u591a\u884c\u6765\u63cf\u8ff0\n\u6bcf\u4e00\u884c\u7684\u6570\u636e\u5305\u62ec\uff1a\n\u56fe\u7247\u540d\u6587\u4ef6\uff0c\u7269\u4f53\u7c7b\u522b\u548c\u8fb9\u7f18\u6846\n\n**\u5e38\u7528\u7684\u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\uff1a**\nCOCO\u6570\u636e\u96c6 \uff1acocodataset.org  \u5305\u542b\u4e8680\u4e2a\u5e38\u89c1\u7c7b\u522b\uff0c\u5305\u542b\u4e86\u5927\u6982330k\u56fe\u7247\uff0c\u67091.5M\u7269\u4f53\n\n## 1 \u8fb9\u7f18\u6846\u7684\u5b9e\u73b0\n\n\u8bfb\u5165\u4e00\u5f20\u56fe\u7247\n```python\n%matplotlib inline\n\nimport torch\nfrom d2l import torch as d2l\n\nd2l.set_figsize()\nimg = d2l.plt.imread('../Jupyter/img/catdog.jpg')\nd2l.plt.imshow(img);\n```\n\n![Image](https://github.com/user-attachments/assets/1c5be667-5caa-4f8d-a72c-840b7fab2622)\n\n\u6846\u5750\u6807\u7684\u8f6c\u6362\uff1a\n```python\n# \u5b9a\u4e49\u5728\u8fd9\u4e24\u79cd\u8868\u793a\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u7684\u51fd\u6570\ndef box_corner_to_center(boxes):\n    '''\u4ece\uff08\u5de6\u4e0a\uff0c\u53f3\u4e0b\uff09\u8f6c\u6362\u5230\uff08\u4e2d\u95f4\uff0c\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff09'''\n    x1, y1, x2, y2 = boxes[:, 0], boxes[:, 1], boxes[:, 2], boxes[:, 3]\n    cx = (x1 + x2) / 2  # \u5f97\u5230\u4e2d\u95f4\u70b9\u7684\u5750\u6807\n    cy = (y1 + y2) / 2\n\n    w = x2 - x1\n    h = y2 - y1\n\n    boxes = torch.stack((cx, cy, w, h), axis = -1)\n    return boxes\n\ndef box_center_to_corner(boxes):\n    '''\u4ece\uff08\u4e2d\u95f4\uff0c\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff09\u8f6c\u6362\u5230\uff08\u5de6\u4e0a\uff0c\u53f3\u4e0b\uff09'''\n    # \u56fe\u7247\u5de6\u4e0a\u89d2\u4e3a\u96f6\u70b9,\u5411\u4e0b\u662fy\u8f74\u6b63\u65b9\u5411\n    cx, cy, w, h = boxes[:, 0], boxes[:, 1], boxes[:, 2], boxes[:, 3]\n    x1 = cx - 0.5 * w\n    y1 = cy - 0.5 * h\n    x2 = cx + 0.5 * w\n    y2 = cy + 0.5 * h \n\n    boxes = torch.stack((x1, y1, x2, y2), axis = -1)\n    return boxes\n```\n\u57fa\u4e8e\u8fb9\u7f18\u6846\u753b\u51fa\u7269\u4f53\u7684\u4f4d\u7f6e\uff1a\n\n```python\n# bbox\u662f\u8fb9\u754c\u6846\u7684\u82f1\u6587\u7f29\u5199\ndog_bbox, cat_bbox = [60.0, 45.0, 378.0, 516.0], [400.0, 112.0, 655.0, 493.0]\nboxes = torch.tensor((dog_bbox, cat_bbox))\nbox_center_to_corner(box_corner_to_center(boxes)) == boxes   # \u6d4b\u8bd5\u4e00\u4e0b\u8f6c\u6362\u51fd\u6570\n\ndef bbox_to_rect(bbox, color):\n    return d2l.plt.Rectangle(xy = (bbox[0], bbox[1]),\n                            width = bbox[2]-bbox[0],\n                            height = bbox[3] - bbox[1],\n                            edgecolor = color,\n                            linewidth = 2,\n                            fill = False)\n\nfig = d2l.plt.imshow(img)\nfig.axes.add_patch(bbox_to_rect(dog_bbox, 'blue'))\nfig.axes.add_patch(bbox_to_rect(cat_bbox, 'red'));\n```\n\n![Image](https://github.com/user-attachments/assets/5f242be6-b3b6-4fac-bf2c-b66f24d3cb6f)\n\n## 2 \u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6(\u624b\u52a8\u6784\u9020\u4e86\u4e00\u4e2a\u5c0f\u7684\u6570\u636e\u96c6)\n\n\u4e0b\u8f7d\u548c\u8bfb\u53d6\u6570\u636e\u96c6\n\n```python\n#\u5305\u542b\u6240\u6709\u56fe\u50cf\u548cCSV\u6807\u7b7e\u6587\u4ef6\u7684\u9999\u8549\u68c0\u6d4b\u6570\u636e\u96c6\u53ef\u4ee5\u76f4\u63a5\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d\u3002", "top": 0, "createdAt": 1746437051, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-05-05", "dateLabelColor": "#0969da"}, "P20": {"htmlDir": "docs/post/shen-du-xue-xi-19--mu-biao-jian-ce-(-mao-kuang-).html", "labels": ["documentation", "Deep Learning"], "postTitle": "\u6df1\u5ea6\u5b66\u4e6019-\u76ee\u6807\u68c0\u6d4b(\u951a\u6846)", "postUrl": "post/shen-du-xue-xi-19--mu-biao-jian-ce-%28-mao-kuang-%29.html", "postSourceUrl": "https://github.com/kxmust/kxmust.github.io/issues/20", "commentNum": 0, "wordCount": 13041, "description": "# \u76ee\u6807\u68c0\u6d4b\uff08\u951a\u6846\uff09\n\u76ee\u6807\u68c0\u6d4b\u9700\u8981\u7ed9\u51fa\u7269\u4f53\u7684\u8fb9\u7f18\u6846\n\u4e00\u7c7b\u76ee\u6807\u68c0\u6d4b\u7b97\u6cd5\u662f\u57fa\u4e8e\u951a\u6846\uff08anchor box\uff09\u7684\uff1a\n- \u63d0\u51fa\u591a\u4e2a\u88ab\u79f0\u4e3a\u951a\u6846\u7684\u533a\u57df\uff08\u8fb9\u7f18\u6846\uff09\uff0c\u662f\u5bf9\u7269\u4f53\u4f4d\u7f6e\u7684\u731c\u6d4b\n- \u9884\u6d4b\u6bcf\u4e2a\u951a\u6846\u91cc\u662f\u5426\u542b\u6709\u5173\u6ce8\u7684\u7269\u4f53\n- \u5982\u679c\u8fd9\u4e2a\u951a\u6846\u4e2d\u8fd8\u6709\u5173\u6ce8\u7684\u7269\u4f53\uff0c\u5219\u9884\u6d4b\u4ece\u8fd9\u4e2a\u951a\u6846\u5230\u771f\u5b9e\u8fb9\u7f18\u6846\u7684\u504f\u79fb\n\n## 1 \u951a\u6846\u7684\u751f\u6210\n\n### 1.1 \u8ba1\u7b97\u4e24\u4e2a\u6846\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff08IoU\u4ea4\u5e76\u6bd4\uff09\n\n![Image](https://github.com/user-attachments/assets/d644019c-5775-4bbd-afaa-481849aa46b8)\n\n\u6bd4\u5982\u7ed9\u5b9a\u4e24\u4e2a\u96c6\u5408A\u548cB\uff0c\u8ba1\u7b97IoU\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n![Image](https://github.com/user-attachments/assets/734fd2aa-c3fd-4fc0-a755-e43349a6d636)\n\n\u5bf9\u4e8e\u56fe\u7247\u6765\u8bf4\uff0c\u4e24\u4e2a\u951a\u6846\u7684\u76f8\u4f3c\u5ea6\u5c31\u662f\u91cd\u53e0\u90e8\u5206\u7684\u50cf\u7d20\u503c\n\n### 1.2 \u8d4b\u4e88\u951a\u6846\u6807\u53f7\n- \u6bcf\u4e2a\u951a\u6846\u662f\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\n- \u5c06\u6bcf\u4e2a\u951a\u6846\u8981\u4e48\u6807\u6ce8\u4e3a\u80cc\u666f\uff0c\u8981\u4e48\u5173\u8054\u4e0a\u4e00\u4e2a\u771f\u5b9e\u7684\u8fb9\u7f18\u6846\uff0c\u8ba1\u7b97\u5176\u504f\u79fb\u7528\u4e8e\u8bad\u7ec3\n- \u6211\u4eec\u53ef\u80fd\u4f1a\u751f\u6210\u5927\u91cf\u7684\u951a\u6846\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u8d1f\u7c7b\u6837\u672c\n\n\u6bd4\u5982\u751f\u6210\u4e869\u4e2a\u951a\u6846\uff0c\u8bc6\u522b\u7684\u7269\u4f53\u4e2a\u6570\u4e3a4\uff0c\u6807\u6ce8\u8fc7\u7a0b\u5982\u4e0b\n\n![Image](https://github.com/user-attachments/assets/834389c9-ccb6-431f-b199-99c0931afff5)\n\n- \u5bf9\u6bcf\u4e2a\u951a\u6846\u8ba1\u7b97\u4e0e\u6bcf\u4e2a\u7269\u4f53\u8fb9\u7f18\u6846\u7684IoU\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u5982\u4e0a\u56fe\u6240\u793a\n- \u9009\u51fa\u77e9\u9635\u4e2d\u6700\u5927\u503c\uff0c\u6bd4\u5982\u662fx23\uff0c\u5b83\u5bf9\u5e94\u8fb9\u7f18\u68463\uff0c\u90a3\u4e48\u5c06\u8be5\u951a\u6846\u7528\u4e8e\u9884\u6d4b\u8fb9\u7f18\u68463\uff0c\u7136\u540e\u5220\u9664\u5b83\u6240\u5728\u884c\u548c\u6240\u5728\u5217\u7684\u6240\u6709\u6570\u636e\n- \u5bf9\u4e8e\u5269\u4e0b\u7684\u6570\u636e\uff0c\u7ee7\u7eed\u9009\u62e9\u6700\u5927\u503c\uff0c\u7136\u540e\u5173\u8054\u4e0a\u8fb9\u7f18\u6846\uff0c\u7ee7\u7eed\u4e0b\u53bb\uff0c\u76f4\u5230\u5c06\u6240\u6709\u8fb9\u7f18\u6846\u90fd\u5173\u8054\u4e0a\u4e86\u951a\u6846\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\n- \u6bcf\u8bfb\u53d6\u4e00\u5f20\u56fe\u7247\uff0c\u90fd\u8981\u751f\u6210\u4e00\u6b21\u951a\u6846\uff0c\u6bd4\u59829\u4e2a\u951a\u6846\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u6807\u53f7\uff0c\u751f\u6210\u8bad\u7ec3\u6837\u672c\n- \u8d4b\u4e88\u6807\u53f7\u7684\u7b97\u6cd5\u6709\u591a\u79cd\uff0c\u4e0a\u9762\u53ea\u662f\u5176\u4e2d\u5e38\u89c1\u7684\u65b9\u6cd5\n\n### 1.3 \u4f7f\u7528\u975e\u6781\u5927\u503c\u6291\u5236(NMS)\u8f93\u51fa\n\u56e0\u4e3a\u6bcf\u4e2a\u951a\u6846\u4f1a\u9884\u6d4b\u4e00\u4e2a\u8fb9\u7f18\u6846\uff0c\u5176\u4e2d\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u9884\u6d4b\uff0c\u53ef\u4ee5\u901a\u8fc7NMS\u6765\u5408\u5e76\u76f8\u4f3c\u7684\u9884\u6d4b\n- \u9009\u4e2d\u662f\u975e\u80cc\u666f\u7c7b\u7684\u6700\u5927\u9884\u6d4b\u503c(\u6700\u5927\u9884\u6d4b\u503c\u662f\u6307\u5bf9\u7c7b\u7684\u9884\u6d4b\u7684softmax\u503c)\n- \u53bb\u6389\u6240\u6709\u5176\u4ed6\u951a\u6846\u548c\u8be5\u951a\u6846IoU\u503c\u5927\u4e8e\\theta\u7684\u9884\u6d4b\n- \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u9884\u6d4b\u6846\u8981\u4e48\u88ab\u9009\u4e2d\uff0c\u8981\u4e48\u88ab\u53bb\u6389\n\n\n\u603b\u7ed3\uff1a\n- \u4e00\u7c7b\u76ee\u6807\u68c0\u6d4b\u7b97\u6cd5\u57fa\u4e8e\u951a\u6846\u6765\u9884\u6d4b\n- \u9996\u5148\u751f\u6210\u5927\u91cf\u951a\u6846\uff0c\u5e76\u8d4b\u4e88\u6807\u53f7\uff0c\u6bcf\u4e2a\u951a\u6846\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\n- \u5728\u9884\u6d4b\u65f6\uff0c\u4f7f\u7528NMS\u6765\u53d6\u6d88\u5197\u4f59\u7684\u9884\u6d4b\n\n## 2 \u4ee3\u7801\u5b9e\u73b0\n\n### 2.1 \u951a\u6846\u7684\u751f\u6210\u548c\u663e\u793a\n\n\u951a\u6846\u7684\u751f\u6210\uff08\u5176\u4e2d\u4e00\u79cd\u65b9\u6cd5\uff09\n\u4ee5\u6bcf\u4e00\u4e2a\u50cf\u7d20\u4e3a\u4e2d\u5fc3\uff0c\u751f\u6210\u4e0d\u540c\u9ad8\u5bbd\u5ea6\u7684\u951a\u6846\n\n![Image](https://github.com/user-attachments/assets/6b63a0a7-7883-41e9-9f9c-5f36e5a2897e)\n- s \u8868\u793a\u951a\u6846\u5927\u5c0f\uff0c\u5360\u56fe\u7247\u7684\u767e\u5206\u4e4b\u591a\u5c11\n- r \u951a\u6846\u7684\u9ad8\u5bbd\u6bd4\n- \u6bcf\u6b21\u751f\u6210\u7684\u65f6\u5019\u4f1a\u7ed9\u51fa\u591a\u4e2as\u548c\u591a\u4e2ar\uff0c\u4f46\u662f\u4e0d\u4f1a\u4e00\u4e00\u7ec4\u5408\uff0c\u56e0\u4e3a\u4f1a\u751f\u6210\u5927\u91cf\u7684\u951a\u6846\uff0c\u901a\u5e38\u4e00\u822c\u505a\u6cd5\u662f\u7528\u4e00\u4e2a\u6700\u5408\u9002\u7684s\u548c\u6bcf\u4e2ar\u8fdb\u884c\u4e00\u6b21\u7ec4\u5408\uff0c\u7136\u540e\u5c06\u540e\u7eed\u7684s\u4e0er1\u8fdb\u884c\u7ec4\u5408\n- \u6240\u4ee5\u751f\u6210\u7684\u951a\u6846\u6570\u91cf=s\u7684\u4e2a\u6570+r\u7684\u4e2a\u6570-1\n\n\n```python\n%matplotlib inline\nimport torch\nfrom d2l import torch as d2l\ntorch.set_printoptions(2) # \u7cbe\u7b80\u8f93\u51fa\u7cbe\u5ea6\n\n#@save\n# data \u56fe\u7247, size \u951a\u6846\u7684\u5927\u5c0f\uff0c\u5360\u56fe\u7247\u7684\u5927\u5c0f, ratio\u8868\u793a\u951a\u6846\u7684\u9ad8\u5bbd\u6bd4\ndef multibox_prior(data, sizes, ratios):\n    '''\u751f\u6210\u4ee5\u6bcf\u4e2a\u50cf\u7d20\u4e3a\u4e2d\u5fc3\u5177\u6709\u4e0d\u540c\u5f62\u72b6\u7684\u951a\u6846'''\n    in_height, in_width = data.shape[-2:]\n    device, num_sizes, num_ratios = data.device, len(sizes), len(ratios)\n    boxes_per_pixel = (num_sizes + num_ratios - 1)\n    size_tensor = torch.tensor(sizes, device=device)\n    ratio_tensor = torch.tensor(ratios, device=device)\n    \n    # \u4e3a\u4e86\u5c06\u951a\u70b9\u79fb\u52a8\u5230\u50cf\u7d20\u7684\u4e2d\u5fc3\uff0c\u9700\u8981\u8bbe\u7f6e\u504f\u79fb\u91cf\u3002", "top": 0, "createdAt": 1746521815, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "createdDate": "2025-05-06", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "Deep Learning": "#0052cc", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "Ken\u7684\u8d44\u6599\u5e93", "faviconUrl": "https://avatars.githubusercontent.com/u/99197662?v=4", "ogImage": "https://avatars.githubusercontent.com/u/99197662?v=4", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://kxmust.github.io", "prevUrl": "/index.html", "nextUrl": "disabled"}